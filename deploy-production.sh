#!/bin/bash

# Script para implantar a aplica√ß√£o NestJS em produ√ß√£o

echo "Iniciando deploy em produ√ß√£o..."

# Aumentar timeout do Docker para evitar problemas de download de imagens
export COMPOSE_HTTP_TIMEOUT=300
export DOCKER_CLIENT_TIMEOUT=300

# Verificar conex√£o com o Docker Hub antes de continuar
echo "üîç Verificando conex√£o com o Docker Hub..."
if ! curl -s --max-time 10 https://registry-1.docker.io/v2/ > /dev/null; then
  echo "‚ùå N√£o foi poss√≠vel conectar ao Docker Hub. Verifique sua conex√£o de internet."
  exit 1
fi

# Verificar se o Docker est√° instalado
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n√£o est√° instalado. Por favor, instale o Docker e tente novamente."
    exit 1
fi

# Verificar se o Docker Compose est√° instalado
if ! command -v docker compose &> /dev/null; then
    echo "‚ùå Docker Compose n√£o est√° instalado. Por favor, instale o Docker Compose e tente novamente."
    exit 1
fi

# Limpar caches de build anteriores
echo "üßπ Limpando caches de build anteriores..."
docker builder prune -f

# Construir e iniciar os containers
docker compose -f docker-compose.prod.yml up -d --build

# Verificar se os containers est√£o rodando
if [ $? -eq 0 ]; then
    echo "‚úÖ Containers iniciados com sucesso!"
    echo "A API est√° dispon√≠vel em: http://localhost:3003"
else
    echo "‚ùå Falha ao iniciar os containers. Verifique os logs para mais detalhes."
    exit 1
fi

echo "‚è≥ Aguardando a aplica√ß√£o iniciar..."
sleep 5

# Executar migra√ß√µes do Prisma
echo "üîÑ Executando migra√ß√µes do Prisma..."
docker compose -f docker-compose.prod.yml exec api npx prisma migrate deploy

echo "‚úÖ Implanta√ß√£o conclu√≠da com sucesso!"
echo "üåê A API est√° dispon√≠vel em: http://localhost:3003"
echo ""
echo "Para verificar os logs da aplica√ß√£o:"
echo "  docker compose -f docker-compose.prod.yml logs -f api"
echo ""
echo "Para encerrar a aplica√ß√£o:"
echo "  docker compose -f docker-compose.prod.yml down" 